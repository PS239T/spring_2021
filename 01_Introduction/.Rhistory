# clean up
rm(list=ls())
## load libs
pacman::p_load(
knitr,
zoo,
foreign,
ggplot2,
reshape,
reshape2,
plyr,
reshape2,
tidyr,
dplyr,
tm,
tau,
koRpus,
tidyverse,
tidytext,
quanteda,
SnowballC,
stringr,
readtext,
stringi,
topicmodels,
spacyr,
corpustools,
stm,
igraph,
stmCorrViz,
splitstackshape)
training_set <- read.csv("/home/jae/linked_fate_evolution/Data/machine_learning_training_set_merged.csv", stringsAsFactors = FALSE)
training_set
training_set %>%
group_by(Group)
training %>%
group_by(group) %>%
summarize(linked_progress = mean(promoting_collective_gains, na.rm = T))
training_set %>%
group_by(group) %>%
summarize(linked_progress = mean(promoting_collective_gains, na.rm = T))
training_set %>%
group_by(Group) %>%
summarize(linked_progress = mean(promoting_collective_gains, na.rm = T))
training_set %>%
group_by(Group) %>%
summarize(linked_progress = mean(Promoting_collective_gains, na.rm = T))
training_set %>%
group_by(Group) %>%
summarize(linked_progress = mean(Promoting_collective_gains, na.rm = T),
linked_hurt = mean(Preventing_collective_losses, na.rm = T))
unique(training_set$Preventing_collective_losses)
training_set <- read.csv("/home/jae/linked_fate_evolution/Data/machine_learning_training_set_merged.csv", stringsAsFactors = FALSE, na.strigns = c("","NA"))
training_set <- read.csv("/home/jae/linked_fate_evolution/Data/machine_learning_training_set_merged.csv", stringsAsFactors = FALSE, na.strings = c("","NA"))
# no white space
str_trim(training_set$Promoting_collective_gains)
str_trim(training_set$Preventing_collective_losses)
training_set$Preventing_collective_losses
str_trim(training_set$Promoting_collective_gains)
str_trim(training_set$Preventing_collective_losses)
training_set$Promoting_collective_gains <- str_trim(training_set$Promoting_collective_gains)
training_set$Preventing_collective_losses <-
str_trim(training_set$Preventing_collective_losses)
training_set %>%
group_by(Group) %>% # group by
summarize(linked_progress = mean(as.numeric(Promoting_collective_gains), na.rm = T),
linked_hurt = mean(as.numeric(Preventing_collective_losses), na.rm = T))
unique(training_set$Preventing_collective_losses)
training_set %>%
group_by(Group) %>% # group by
summarize(linked_progress = mean(as.numeric(Promoting_collective_gains), na.rm = T),
linked_hurt = mean(as.numeric(Preventing_collective_losses), na.rm = T))
# summarize means
install.packages(c("callr", "gamlss.dist", "jsonlite", "markdown", "measurements", "rmarkdown", "streamR", "udpipe"))
