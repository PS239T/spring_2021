scale_x_reordered()
tidy(topic_modeling) %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0("Topic", topic),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(X = NULL, y = expression(beta),
title = "Highest word probabilities for each topic",
subtitle = "Different words are associated with different topics")
# plot using stm
plot(topic_modeling)
many_mdoels <- data_frame(K = c(5, 10, 15, 20)) %>%
mutate(topic_model = future_map(K, ~stm(inaug_dfm, K = .,
verbose = TRUE)))
many_mdoels <- data_frame(K = c(5, 10, 15, 20)) %>%
mutate(topic_model = future_map(K, ~stm(inaug_dfm, K = .,
verbose = TRUE)))
library(furrr)
install.packages("furrr")
library(furrr)
many_mdoels <- data_frame(K = c(5, 10, 15, 20)) %>%
mutate(topic_model = future_map(K, ~stm(inaug_dfm, K = .,
verbose = TRUE)))
?map
many_models
many_mdoels
?map
k_results <- many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
sematic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %<%
transmute(K,
'Exclusivity' = map_dbl(exclusivity, mean),
'Semantic coherence' = map_dbl(semantic_coherence, mean)) %>%
gather(Metric, Value, -K) %>%
ggplot(aes(K, value, color = Metrics)) %>%
geom_line(size = 1.5, alpha = 0.7, show.legend = FALSE) %>%
facet_wrap(~Metric, scales = "free_y")
k_results <- many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
sematic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
transmute(K,
'Exclusivity' = map_dbl(exclusivity, mean),
'Semantic coherence' = map_dbl(semantic_coherence, mean)) %>%
gather(Metric, Value, -K) %>%
ggplot(aes(K, value, color = Metrics)) %>%
geom_line(size = 1.5, alpha = 0.7, show.legend = FALSE) %>%
facet_wrap(~Metric, scales = "free_y")
many_mdoels <- data_frame(K = c(5, 10, 15)) %>%
mutate(topic_model = future_map(K, ~stm(inaug_dfm, K = .,
verbose = TRUE)))
k_results <- many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
sematic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(semantic_coherence, exclusivity, col = K)) +
geom_point(size = 2, alpha = 0.7)
many_models <- data_frame(K = c(5, 10, 15)) %>%
mutate(topic_model = future_map(K, ~stm(inaug_dfm, K = .,
verbose = TRUE)))
k_results <- many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
sematic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(semantic_coherence, exclusivity, col = K)) +
geom_point(size = 2, alpha = 0.7)
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
sematic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(semantic_coherence, exclusivity, col = K)) +
geom_point(size = 2, alpha = 0.7)
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(semantic_coherence, exclusivity, col = K)) +
geom_point(size = 2, alpha = 0.7)
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(semantic_coherence, exclusivity, color = K)) +
geom_point(size = 2, alpha = 0.7)
many_models %>%
select(K, exclusivity, semantic_coherence) %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(semantic_coherence, exclusivity, color = K)) +
geom_point(size = 2, alpha = 0.7)
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
select(K, exclusivity, semantic_coherence) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(semantic_coherence, exclusivity, color = K)) +
geom_point(size = 2, alpha = 0.7)
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
select(K, exclusivity, semantic_coherence) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(x = semantic_coherence, y = exclusivity, color = K)) +
geom_point(size = 2, alpha = 0.7)
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
select(K, exclusivity, semantic_coherence) %>%
mutate(K = as.factor(K))
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm))
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm))
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(x = semantic_coherence, y = exclusivity, color = K)) +
geom_point(size = 2, alpha = 0.7)
many_models %>%
map(topic_model)
many_models %>%
map(topic_model, exclusivity)
many_models$topic_model
tidy(many_models)
many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, inaug_dfm)) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(x = semantic_coherence, y = exclusivity, color = K)) +
geom_point(size = 2, alpha = 0.7)
many_models <- K = c(5, 10, 15)
many_models <- K = c(5, 10, 15)
many_models <- data_frame(K = c(5, 10, 15))
many_models <- data_frame(K = c(5, 10, 15)) %>%
mutate(topic_model = future_map(K, ~stm(inaug_dfm, K = .,
verbose = TRUE)))
model_list = list()
model_list = list()
for (i in c(5, 10, 15)){
topic_model = stm(inaug_dfm, K = i, verbose = TRUE)
model_list[[length(model_list) + 1]] = model_list
}
model_list
model_list[[1]]
unlist(model_list)
model_list[1]
model_list[[1]]
model_list = list()
model_list = list()
for (i in c(5, 10)){
topic_model = stm(inaug_dfm, K = i, verbose = TRUE)
model_list[[length(model_list) + 1]] = model_list
}
model_list = list()
for (i in c(5, 10)){
topic_model = stm(inaug_dfm, K = i, verbose = TRUE)
model_list[[length(model_list) + 1]] = topic_model
}
model_list
model_list[[1]]
unlist(model_list)
# unlist and create individual dataframes
list2env(model_list, envir = .GlobalEnv)
model_list %>%
mutate(exclusivity = topic_model, exclusivity))
tidy(model_list)
list2env(topic_model)
list2env(topic_model, envir = .GlobalEnv)
topic_model
list2env(model_list, envir = .GlobalEnv)
list2env(model_list, envir = .GlobalEnv)
# empty list
model_list = list()
# for loop
for (i in c(5, 10)){
topic_model = stm(inaug_dfm, K = i, verbose = TRUE)
model_list[[length(model_list) + 1]] = topic_model
}
list2env(model_list, envir = .GlobalEnv)
attach(model_list)
list2env(model_list)
list2env(model_list, "model")
?list2env
model_list[[1]]
model_list[[2]]
model_list = list()
# for loop
for (i in c(5:10)){
topic_model = stm(inaug_dfm, K = i, verbose = TRUE)
model_list[[length(model_list) + 1]] = topic_model
}
topic_model = stm(inaug_dfm, K = 10, verbose = TRUE)
topic_model %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(x = semantic_coherence, y = exclusivity, color = K)) +
geom_point(size = 2, alpha = 0.7)
tidy(topic_model) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(x = semantic_coherence, y = exclusivity, color = K)) +
geom_point(size = 2, alpha = 0.7)
tidy(topic_model) %>%
ggplot(aes(x = semantic_coherence, y = exclusivity, color = K)) +
geom_point(size = 2, alpha = 0.7)
tidy(topic_model)
inaug_dfm
inaug_dfm <- textProcessor(documents = inaug$text, metadata = inaug,
stem = TRUE,
removenumbers = TRUE,
striphtml = FALSE,
verbose = TRUE,
stop_words = TRUE)
?textProcessor
inaug_dfm <- textProcessor(documents = inaug$text, metadata = inaug,
removestopwords = TRUE,
verbose = TRUE)
storage <- searchK(inaug_dfm$documents, inaug_dfm$vocab, K = c(5, 10, 15),
prevalence = Year + President, data = meta)
storage <- searchK(inaug_dfm$documents, inaug_dfm$vocab, K = c(5, 10, 15),
prevalence = Year + President, data = inaug_dfm$meta)
storage <- searchK(inaug_dfm$documents, inaug_dfm$vocab, K = c(5, 10, 15),
prevalence =~ Year + President, data = inaug_dfm$meta)
storage$results $>$
storage$results %>%
select(K, exclusivity, semantic_coherence)
storage$results
storage$results %>%
select(K, exclus, semcoh) %>%
ggplot(ases(semcoh, exclus, col = K)) %>%
geom_point(size = 2, alpha = 0.7)
storage$results %>%
select(K, exclus, semcoh) %>%
ggplot(ase(semcoh, exclus, col = K)) %>%
geom_point(size = 2, alpha = 0.7)
storage$results %>%
select(K, exclus, semcoh) %>%
ggplot(aes(semcoh, exclus, col = K)) %>%
geom_point(size = 2, alpha = 0.7)
storage$results %>%
select(K, exclus, semcoh) %>%
ggplot(aes(x= semcoh, y = exclus, col = K)) +
geom_point(size = 2, alpha = 0.7)
storage$results %>%
select(K, exclus, semcoh) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(x= semcoh, y = exclus, col = K)) +
geom_point(size = 2, alpha = 0.7)
storage$results %>%
select(K, exclus, semcoh) %>%
mutate(K = as.factor(K)) %>%
ggplot(aes(x= semcoh, y = exclus, col = K)) +
geom_point(size = 5, alpha = 0.7)
topic_model <- stm(inaug_dfm$documents, inaug_dfm$vocab, K = 10, prevalence =~ Year+ President,
max.em.its = 75, data = inaug_dfm$meta, init.type="Spectral",
seed = 1234567,
verbose  =TRUE)
plot(topic_model)
# find relevant articles
findThough(topic_model, texts = shortdoc, n = 2, topics = 3)
# find relevant articles
findThought(topic_model, texts = shortdoc, n = 2, topics = 3)
# find relevant articles
findThoughts(topic_model, texts = shortdoc, n = 2, topics = 3)
# find relevant articles
findThoughts(topic_model, texts = inaug$text, n = 2, topics = 3)
# find relevant articles
findThoughts(topic_model, texts = inaug$text, topics = 3)[1]
# find relevant articles
findThoughts(topic_model, texts = inaug$text, topics = 3)[[1]]
# find relevant articles
findThoughts(topic_model, texts = inaug$text, topics = 3)$docs[[1]]
storage$results
group_by(Source) %>%
gather(metrics, value, heldout, residual, semcoh, exclus) %>%
ggplot(aes(x = K, y = value, col = Source)) +
geom_point(size = 3, alpha = 0.3) +
geom_line(size = 1) +
facet_wrap(~metrics, scales = "free_y", labeller = as_labeller(diagnostic_names)) +
theme_Publication() +
labs(title = "Diagnostic Values by Number of Topics",
x = "Number of Topics (K)",
y = "Value") +
guides(col=guide_legend(ncol=2))
storage$results %>%
gather(metrics, value, heldout, residual, semcoh, exclus) %>%
ggplot(aes(x = K, y = value)) +
geom_point(size = 3, alpha = 0.3) +
geom_line(size = 1) +
facet_wrap(~metrics, scales = "free_y") +
theme_Publication() +
labs(title = "Diagnostic Values by Number of Topics",
x = "Number of Topics (K)",
y = "Value") +
guides(col=guide_legend(ncol=2))
storage$results %>%
gather(metrics, value, heldout, residual, semcoh, exclus) %>%
ggplot(aes(x = K, y = value)) +
geom_point(size = 3, alpha = 0.3) +
geom_line(size = 1) +
facet_wrap(~metrics, scales = "free_y") +
labs(title = "Diagnostic Values by Number of Topics",
x = "Number of Topics (K)",
y = "Value") +
guides(col=guide_legend(ncol=2))
topic_model <- stm(inaug_dfm$documents, inaug_dfm$vocab, K = 5, prevalence =~ Year+ President,
max.em.its = 75, data = inaug_dfm$meta, init.type="Spectral",
seed = 1234567,
verbose  =TRUE)
# plot
plot(topic_model)
# find relevant articles
findThoughts(topic_model, texts = inaug$text, topics = 3)$docs[[1]]
tidy(topic_model, matrix = "gamma",
document_names = rownames(inaug_dfm)) %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0(topic),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = "Expected topic proportion",
title = name,
subtitle = "Highest word probabilities for each topic")+
theme_Publication() +
scale_y_continuous(labels = scales::percent)
tidy_text <- tidy(topic_model, matrix = "gamma")
tidy_text
tidy_text <- tidy(topic_model, matrix = "gamma")
tidy_text <- aggregate(tidy_data$gamma, by = list(tidy_data$topic), FUN = mean)
tidy_text <- aggregate(tidy_text$gamma, by = list(tidy_text$topic), FUN = mean)
# colname change
colnames(tidy_text) <- c("topics","values")
tidy_text %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0(topic),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = "Expected topic proportion",
title = name,
subtitle = "Highest word probabilities for each topic")+
theme_Publication() +
scale_y_continuous(labels = scales::percent)
tidy_text
# tidy
tidy_text <- tidy(topic_model, matrix = "gamma")
tidy_text %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0(topics),
term = reorder_within(term, beta, topics)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = "Expected topic proportion",
title = name,
subtitle = "Highest word probabilities for each topic")+
theme_Publication() +
scale_y_continuous(labels = scales::percent)
tidy_text %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0(topics),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = "Expected topic proportion",
title = name,
subtitle = "Highest word probabilities for each topic")+
theme_Publication() +
scale_y_continuous(labels = scales::percent)
tidy_text %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0(topic),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = "Expected topic proportion",
title = name,
subtitle = "Highest word probabilities for each topic")+
theme_Publication() +
scale_y_continuous(labels = scales::percent)
tidy_text
tidy_text <- tidy(topic_model, matrix = "gamma",
document_names = rownames(inaug_dfm))
tidy_text
tidy_text %>%
arrange(beta) %>%
group_by(topic) %>%
top_n(7, beta) %>%
arrange(-beta) %>%
select(topic, term) %>%
summarize(terms = list(term)) %>%
mutate(terms = map(terms, paste, collapse = ", ")) %>%
ggplot(aes(topic, gamma, label = terms, fill = topic)) +
geom_col(show.legend = FALSE)
tidy_text %>%
arrange(beta) %>%
group_by(topic) %>%
top_n(7, beta) %>%
arrange(-beta) %>%
select(topic, term) %>%
summarize(terms = list(term))
tidy_text %>%
arrange(beta) %>%
group_by(topic) %>%
top_n(7, beta) %>%
arrange(-beta) %>%
select(topic, term) %>%
summarise(terms = list(term))
tidy_text <- aggregate(tidy_text$gamma, by = list(tidy_text$topic), FUN = mean)
tidy_text <- tidy(topic_model, matrix = "gamma")
tidy_text %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0(topic),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = "Expected topic proportion",
title = name,
subtitle = "Highest word probabilities for each topic")+
scale_y_continuous(labels = scales::percent)
tidy_text
# tidy
tidy_text <- tidy(topic_model, matrix = "gamma")
tidy_text
topic_model
# tidy
tidy_text <- tidy(topic_model)
tidy_text
tidy_text %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0(topic),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = "Expected topic proportion",
title = name,
subtitle = "Highest word probabilities for each topic")+
scale_y_continuous(labels = scales::percent)
tidy_text %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0(topic),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = "Expected topic proportion",
title = "Top 10 topics by prevalence in the Hacker News corpus",
subtitle = "Highest word probabilities for each topic")+
scale_y_continuous(labels = scales::percent)
tidy_text %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
mutate(topic = paste0(topic),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = "Expected topic proportion",
title = "Top 10 topics by prevalence",
subtitle = "Highest word probabilities for each topic")+
scale_y_continuous(labels = scales::percent)
