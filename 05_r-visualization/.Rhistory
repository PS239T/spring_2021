ifelse(black_full_labeled$`black_lp_data$labeled_linked_progress` == 1 & black_full_labeled$`black_lh_data$labeled_linked_hurt` == 1, 1, 0)
## frequency
sum(asian_full_labeled$lh_exclusvie)/sum(asian_full_labeled$lp_exclusvie)
sum(black_full_labeled$lh_exclusvie)/sum(black_full_labeled$lp_exclusvie)
# merge
full_labeled <- rbind(
mutate(asian_full_labeled[,-c(8,9)], group = "Asian Americans"),
mutate(black_full_labeled[,-c(8,9)], group = "African Americans"))
# factor level
full_labeled$group <- factor(full_labeled$group, levels = c("Asian Americans", "African Americans"))
full_labeled %>%
group_by(group, year) %>%
summarize(lp_mean = mean(lp_exclusvie),
lh_mean = mean(lh_exclusvie),
mixed_mean = mean(lf_mixed)) %>%
gather(mean_type, value, lp_mean, lh_mean, mixed_mean) %>%
ggplot(aes(x = year, y = value*100, col = mean_type)) +
geom_point(size = 2) +
geom_smooth() +
#  ylim(c(0,17)) +
theme_Publication() +
scale_color_manual(name = "Type", labels = c("Linked hurt","Linked progress","Mixed"), values=c("red","blue","purple")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~group) +
labs(title = "Longitudinal comparison", y = "Percentage", x = "Year")
names(full_labeled)
rm(list=ls())
# install packages
pacman::p_load(
ggplot2,
tidyverse,
ggthemes,
ggrepel
)
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = country, y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
rm(list=ls())
# install packages
pacman::p_load(
ggplot2,
tidyverse,
ggthemes,
ggrepel
)
# data
anscombe
# correlation
cor(anscombe)[c(1:4),c(5:8)]
# plot
anscombe %>%
gather(x_name, x_value, x1:x4) %>%
gather(y_name, y_value, y1:y4) %>%
ggplot(aes(x = x_value, y = y_value)) +
geom_point() +
facet_grid(x_name ~ y_name) +
theme_bw()
# load library
library(gapminder)
gapminder
typeof(gapminder)
class(gapminder)
p <- ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point()
p + geom_point() + geom_smooth()
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp,
size = pop)) +
geom_point()
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp,
size = pop,
color = continent)) +
geom_point()
# try red instead of "red"
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp,
size = pop,
color = "red")) +
geom_point()
p + geom_point() +
geom_smooth()
p + geom_point(alpha = 0.3) + # alpha controls transparency
geom_smooth(color = "red", se = FALSE, size = 2)
p + geom_point() +
coord_flip() # coord_type
p + geom_point() +
scale_x_log10() # scale_mapping_type
p + geom_point() +
geom_smooth(method = "lm") +
scale_x_log10()
p + geom_point() +
geom_smooth(method = "lm") +
scale_x_log10()
p + geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder")
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder")
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent,
fill = continent)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder")
p + geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder") +
theme_economist()
figure_example <- p + geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder") +
theme_economist()
ggsave(filename = "figure_example.png", plot = figure_example)
ggsave(filename = "figure_example_modified.png", plot = figure_example,
height = 8,
width = 10,
units = "in")
p <- ggplot(gapminder, aes(x = year, y = gdpPercap))
p + geom_point()
p + geom_line()
gapminder
p <- ggplot(gapminder, aes(x = year, y = gdpPercap))
p + geom_line(aes(group = country)) # group by
p + geom_line(aes(group = country)) + facet_wrap(~continent) # facetting
p + geom_line(aes(group = country), color = "gray70") +
geom_smooth(size = 1.1, method = "loess", se = FALSE) +
scale_y_log10(labels = scales::dollar) +
facet_wrap(~continent, ncol = 5) + # for single categorical variable; for multiple categorical variables use facet_grid()
labs(x = "Year",
y = "GDP per capita",
title = "GDP per capita on Five continents")
gapminder %>%
group_by(continent, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp_mean, color = continent)) +
geom_point() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy on Five continents")
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp_mean, color = country)) +
geom_point() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy in Europe")
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp_mean)) +
geom_point() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy in Europe") +
facet_wrap(~country)
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = country, y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = reorder(country, lifeExp_mean), y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = reorder(country, -lifeExp_mean), y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Country",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Asia" | continent == "Americas") %>%
group_by(continent, country) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = gdp_mean, y = lifeExp_mean)) +
geom_point() +
geom_text(aes(label = country)) +
scale_x_log10() +
facet_grid(~continent)
p <- ggplot(gapminder, aes(x = year, y = gdpPercap))
p + geom_line(aes(group = country)) # group by
p + geom_line(aes(group = country)) + facet_wrap(~continent) # facetting
p + geom_line(aes(group = country), color = "gray70") +
geom_smooth(size = 1.1, method = "loess", se = FALSE) +
scale_y_log10(labels = scales::dollar) +
facet_wrap(~continent, ncol = 5) + # for single categorical variable; for multiple categorical variables use facet_grid()
labs(x = "Year",
y = "GDP per capita",
title = "GDP per capita on Five continents") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = country, y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Country",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = reorder(country, lifeExp_mean), y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Country",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = reorder(country, -lifeExp_mean), y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Country",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Asia" | continent == "Americas") %>%
group_by(continent, country) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = gdp_mean, y = lifeExp_mean)) +
geom_point() +
geom_text(aes(label = country)) +
scale_x_log10() +
facet_grid(~continent)
out <- lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
gapminder %>%
group_by(continent) %>%
summary(min_gap = min(gdpPercap),
max_gap = max(gdpPercap),
med_pop = median(pop)) %>%
expand.grid(gdpPercap = (seq(from = min_gap,
to = max_gap,
length.out = 100,
pop = med_pop,
continent = c("Africa", "Americas",
"Asia", "Europe", "Oceania"))))
out <- lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
gapminder %>%
group_by(continent) %>%
summary(min_gap = min(gdpPercap),
max_gap = max(gdpPercap),
med_pop = median(pop))
expand.grid(gdpPercap = (seq(from = min_gap,
to = max_gap,
length.out = 100,
pop = med_pop,
continent = c("Africa", "Americas",
"Asia", "Europe", "Oceania"))))
rm(list=ls())
# install packages
pacman::p_load(
ggplot2,
tidyverse,
ggthemes,
ggrepel,
broom
)
out <-tidy(lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)) %>%
round_df()
out <-tidy(lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)) %>%
broom::round_df()
install.packages("broom")
install.packages("broom")
out <-tidy(lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)) %>%
round_df()
out <- tidy(out)
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder))
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
out_comp <- tidy(out) %>% round_df()
out_comp <- tidy(out)
out_comp
out_comp <- round_df(tidy(out), 2)
out_comp <- round(tidy(out), 2)
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p <- out_comp %>%
ggplot(aes(x = term, y = estimate)) +
geom_point
out_comp <- tidy(out, conf.int = TRUE)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate)) +
geom_point
p <- out_comp %>%
ggplot(aes(x = term, y = estimate)) +
geom_point()
out_comp <- tidy(out, conf.int = TRUE)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point()
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point()
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
out_comp <- tidy(out)
p + geom_point()
p + geom_point() +
coord_flip()
p + geom_point() +
coord_flip() +
theme_bw()
# confidence intervals
out_comp <- tidy(out, conf.int = TRUE)
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %<%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %nin% "(Intercept)") #no intervals
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %nin% "(Intercept)") #no intervals
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
out_conf$labs <- prefix_strip(out_conf$term, "continent")
library(broom)
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
out_conf$labs <- prefix_strip(out_conf$term, "continent")
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
out_conf$labs <- prefix_strip(out_conf$term, "continent")
?prefix_strip
??prefix_strip
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
p <- out_conf %<%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p <- out_conf %>%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
p <- out_conf %>%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(term, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS E")
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(term, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(term, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate") +
theme_bw()
