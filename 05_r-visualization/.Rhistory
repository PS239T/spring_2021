p + geom_point() +
geom_smooth(method = "lm") +
scale_x_log10()
p + geom_point() +
geom_smooth(method = "lm") +
scale_x_log10()
p + geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder")
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder")
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp,
color = continent,
fill = continent)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder")
p + geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder") +
theme_economist()
figure_example <- p + geom_point(alpha = 0.3) +
geom_smooth(method = "gam", color = "red") +
scale_x_log10(labels = scales::dollar) +
labs( x = "log GDP",
y = "Life Expectancy",
title = "A Gapminder Plot",
subtitle = "Data points are country-years",
caption = "Source: Gapminder") +
theme_economist()
ggsave(filename = "figure_example.png", plot = figure_example)
ggsave(filename = "figure_example_modified.png", plot = figure_example,
height = 8,
width = 10,
units = "in")
p <- ggplot(gapminder, aes(x = year, y = gdpPercap))
p + geom_point()
p + geom_line()
gapminder
p <- ggplot(gapminder, aes(x = year, y = gdpPercap))
p + geom_line(aes(group = country)) # group by
p + geom_line(aes(group = country)) + facet_wrap(~continent) # facetting
p + geom_line(aes(group = country), color = "gray70") +
geom_smooth(size = 1.1, method = "loess", se = FALSE) +
scale_y_log10(labels = scales::dollar) +
facet_wrap(~continent, ncol = 5) + # for single categorical variable; for multiple categorical variables use facet_grid()
labs(x = "Year",
y = "GDP per capita",
title = "GDP per capita on Five continents")
gapminder %>%
group_by(continent, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp_mean, color = continent)) +
geom_point() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy on Five continents")
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp_mean, color = country)) +
geom_point() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy in Europe")
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp_mean)) +
geom_point() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy in Europe") +
facet_wrap(~country)
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = country, y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = reorder(country, lifeExp_mean), y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Year",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = reorder(country, -lifeExp_mean), y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Country",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Asia" | continent == "Americas") %>%
group_by(continent, country) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = gdp_mean, y = lifeExp_mean)) +
geom_point() +
geom_text(aes(label = country)) +
scale_x_log10() +
facet_grid(~continent)
p <- ggplot(gapminder, aes(x = year, y = gdpPercap))
p + geom_line(aes(group = country)) # group by
p + geom_line(aes(group = country)) + facet_wrap(~continent) # facetting
p + geom_line(aes(group = country), color = "gray70") +
geom_smooth(size = 1.1, method = "loess", se = FALSE) +
scale_y_log10(labels = scales::dollar) +
facet_wrap(~continent, ncol = 5) + # for single categorical variable; for multiple categorical variables use facet_grid()
labs(x = "Year",
y = "GDP per capita",
title = "GDP per capita on Five continents") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = country, y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Country",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = reorder(country, lifeExp_mean), y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Country",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Europe") %>%
group_by(country, year) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = reorder(country, -lifeExp_mean), y = lifeExp_mean)) +
geom_boxplot() +
labs(x = "Country",
y = "Life expectancy",
title = "Life expectancy in Europe") +
coord_flip()
gapminder %>%
filter(continent == "Asia" | continent == "Americas") %>%
group_by(continent, country) %>%
summarize(gdp_mean = mean(gdpPercap),
lifeExp_mean = mean(lifeExp)) %>%
ggplot(aes(x = gdp_mean, y = lifeExp_mean)) +
geom_point() +
geom_text(aes(label = country)) +
scale_x_log10() +
facet_grid(~continent)
out <- lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
gapminder %>%
group_by(continent) %>%
summary(min_gap = min(gdpPercap),
max_gap = max(gdpPercap),
med_pop = median(pop)) %>%
expand.grid(gdpPercap = (seq(from = min_gap,
to = max_gap,
length.out = 100,
pop = med_pop,
continent = c("Africa", "Americas",
"Asia", "Europe", "Oceania"))))
out <- lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
gapminder %>%
group_by(continent) %>%
summary(min_gap = min(gdpPercap),
max_gap = max(gdpPercap),
med_pop = median(pop))
expand.grid(gdpPercap = (seq(from = min_gap,
to = max_gap,
length.out = 100,
pop = med_pop,
continent = c("Africa", "Americas",
"Asia", "Europe", "Oceania"))))
rm(list=ls())
# install packages
pacman::p_load(
ggplot2,
tidyverse,
ggthemes,
ggrepel,
broom
)
out <-tidy(lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)) %>%
round_df()
out <-tidy(lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)) %>%
broom::round_df()
install.packages("broom")
install.packages("broom")
out <-tidy(lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)) %>%
round_df()
out <- tidy(out)
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder))
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
out_comp <- tidy(out) %>% round_df()
out_comp <- tidy(out)
out_comp
out_comp <- round_df(tidy(out), 2)
out_comp <- round(tidy(out), 2)
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p <- out_comp %>%
ggplot(aes(x = term, y = estimate)) +
geom_point
out_comp <- tidy(out, conf.int = TRUE)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate)) +
geom_point
p <- out_comp %>%
ggplot(aes(x = term, y = estimate)) +
geom_point()
out_comp <- tidy(out, conf.int = TRUE)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point()
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point()
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
out_comp <- tidy(out)
p + geom_point()
p + geom_point() +
coord_flip()
p + geom_point() +
coord_flip() +
theme_bw()
# confidence intervals
out_comp <- tidy(out, conf.int = TRUE)
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %<%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %nin% "(Intercept)") #no intervals
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %nin% "(Intercept)") #no intervals
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
out_conf$labs <- prefix_strip(out_conf$term, "continent")
library(broom)
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
out_conf$labs <- prefix_strip(out_conf$term, "continent")
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
out_conf$labs <- prefix_strip(out_conf$term, "continent")
?prefix_strip
??prefix_strip
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
p <- out_conf %<%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p <- out_conf %>%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
out_conf <- subset(out_conf, term %in% "(Intercept)") #no intervals
p <- out_conf %>%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(labs, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(term, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS E")
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(term, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
# regression model
out <-lm(formula = lifeExp ~ gdpPercap + pop + continent,
data = gapminder)
# estimates
out_comp <- tidy(out)
p <- out_comp %>%
ggplot(aes(x = term, y = estimate))
p + geom_point() +
coord_flip() +
theme_bw()
# plus confidence intervals
out_conf <- tidy(out, conf.int = TRUE)
p <- out_conf %>%
ggplot(aes(x = reorder(term, estimate), y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate") +
theme_bw()
inaug %>%
filter(Year > 1945) %>%
group_by(President) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ")
rm(list=ls())
require(tm) # for text mining
library(tidyverse) # for tidyverse
library(tidytext) # for tidy text analysis
library(quanteda) # for text analysis and examples
# load MLK speech
MLK <- readLines("http://www.sthda.com/sthda/RDoc/example-files/martin-luther-king-i-have-a-dream-speech.txt")
MLK
# tidy text
MLK_df <- data_frame(line = 1:length(MLK), text = MLK)
# see data
MLK_df
# see class
class(MLK_df)
# load data
inaug <- tidy(data_corpus_inaugural)
inaug %>%
group_by(President) %>%
unnest_tokens(word, text)
# no filtered
inaug %>%
filter(Year > 1945) %>%
group_by(President) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
count(bigram, sort = TRUE)
# filtered
inaug %>%
filter(Year > 1945) %>%
group_by(President) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ")
#filter(!word1 %in% stop_words$word) %>%
#filter(!word2 %in% stop_words$word) %>%
#unite(bigram, word1, word2, sep = " ") %>%
#count(bigram, sort = TRUE)
inaug %>%
filter(Year > 1945) %>%
group_by(President) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ")
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(bigram, word1, word2, sep = " ") %>%
count(bigram, sort = TRUE)
inaug %>%
filter(Year > 1945) %>%
group_by(President) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(bigram, word1, word2, sep = " ") %>%
count(bigram, sort = TRUE)
inaug_filtered <- inaug %>%
filter(Year > 1945) %>%
group_by(President) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(bigram, word1, word2, sep = " ") %>%
count(bigram, sort = TRUE)
inaug_filtered <- inaug %>%
filter(Year > 1945) %>%
group_by(President) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
unite(bigram, word1, word2, sep = " ")
inaug_filtered %>%
count(bigram, sort = TRUE)
inaug_filtered %>%
filter(word2 == "government") %>%
count(President, word2, sort = TRUE)
inaug_filtered %>%
filter(word2 == "government") %>%
count(President, word2, sort = TRUE)
inaug_filtered
inaug_filtered <- inaug %>%
filter(Year > 1945) %>%
group_by(President) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word)
inaug_filtered %>%
unite(bigram, word1, word2, sep = " ") %>%
count(bigram, sort = TRUE)
inaug_filtered %>%
filter(word2 == "government") %>%
count(President, word2, sort = TRUE)
